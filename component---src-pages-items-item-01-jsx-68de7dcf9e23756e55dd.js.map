{"version":3,"file":"component---src-pages-items-item-01-jsx-68de7dcf9e23756e55dd.js","mappings":"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","sources":["webpack://tofu/./src/components/bar/breadcrumbBar.jsx","webpack://tofu/./src/components/wrapper/itemImgWrapper.jsx","webpack://tofu/./src/components/button/addCartBtn.jsx","webpack://tofu/./src/components/button/favoriteBtn.jsx","webpack://tofu/./src/components/wrapper/itemInfoWrapper.jsx","webpack://tofu/./src/components/wrapper/itemIntroWrapper.jsx","webpack://tofu/./src/components/section/itemSection.jsx","webpack://tofu/./src/pages/items/item01.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\n// components\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const BreadcrumbBar = (props) => {\n  return (\n    <SBar>\n      <SContainer>\n        {props.breadcrumbs.map(({ txt, url }) => {\n          return (\n            <SWrapper key={url}>\n              <Link to={url}>{txt}</Link>\n              <span>/</span>\n            </SWrapper>\n          );\n        })}\n      </SContainer>\n    </SBar>\n  );\n};\n\nconst SBar = styled.nav`\n  height: 48px;\n  background-color: ${Color.gray100};\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    height: 32px;\n  }\n`;\n\nconst SContainer = styled.div`\n  width: 96%;\n  max-width: 1366px;\n  margin: auto;\n  /*  */\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: left;\n`;\n\nconst SWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  &:first-of-type {\n    a {\n      padding-left: 0;\n    }\n  }\n  span {\n    line-height: 1;\n    font-size: 0.8rem;\n  }\n  a {\n    line-height: 1;\n    font-size: 0.8rem;\n    color: ${Color.gray400};\n    transition: all 0.2s;\n    padding: 0 1rem;\n    @media screen and (min-width: 1024px) {\n      &:hover {\n        color: ${Color.blue};\n      }\n    }\n    @media screen and (max-width: 1023px) {\n      &:active {\n        color: ${Color.blue};\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    a,\n    span {\n      font-size: 0.6rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useState } from \"react\";\n\nexport const ItemImgWrapper = (props) => {\n  const [isSelect, setIsSelect] = useState(\"01\");\n  const onClickChangeImg = (e) => {\n    const target = e.currentTarget.getAttribute(\"data-img-id\");\n    setIsSelect(target);\n  };\n  return (\n    <SWrapper>\n      <div className=\"btn-area\">\n        {props.imgList.map(({ id, img }) => {\n          return (\n            <button onClick={onClickChangeImg} data-img-id={id} key={id}>\n              <img src={img} alt=\"item\" />\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"img-area\" data-img-select={isSelect}>\n        {props.imgList.map(({ id, img }) => {\n          return <img src={img} alt=\"item\" key={id} data-is-select={id} />;\n        })}\n      </div>\n    </SWrapper>\n  );\n};\n\nconst SWrapper = styled.div`\n  grid-area: img;\n  display: grid;\n  grid-template-rows: auto;\n  grid-template-columns: 80px 1fr;\n  grid-template-areas: \"btnarea imgarea\";\n  gap: 1rem;\n  .btn-area {\n    grid-area: btnarea;\n    display: flex;\n    flex-direction: column;\n    button {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 1rem;\n      border: none;\n      cursor: pointer;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n      &:last-of-type {\n        margin-bottom: 0;\n      }\n    }\n  }\n  .img-area {\n    grid-area: imgarea;\n    width: 100%;\n    aspect-ratio: 1/1;\n    img {\n      width: 100%;\n      aspect-ratio: 1/1;\n      display: none;\n      object-fit: cover;\n      object-position: center;\n    }\n    &[data-img-select=\"01\"] {\n      img {\n        &:nth-of-type(1) {\n          display: inline-block;\n        }\n      }\n    }\n    &[data-img-select=\"02\"] {\n      img {\n        &:nth-of-type(2) {\n          display: inline-block;\n        }\n      }\n    }\n    &[data-img-select=\"03\"] {\n      img {\n        &:nth-of-type(3) {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    grid-template-rows: auto 80px;\n    grid-template-columns: 1fr;\n    grid-template-areas:\n      \"imgarea\"\n      \"btnarea\";\n    gap: 0.5rem;\n    .btn-area {\n      flex-direction: row;\n      button {\n        margin-bottom: 0;\n        margin-right: 0.5rem;\n        &:last-of-type {\n          margin-bottom: 0;\n        }\n      }\n    }\n    .img-area {\n      img {\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const AddCartBtn = () => {\n  const onClickAddCart = () => {\n    alert(\"カートに追加しました。このサイトはデモサイトです。\");\n  };\n  return (\n    <SBtn onClick={onClickAddCart}>\n      <i className=\"material-icons-outlined\">shopping_cart</i>\n      <span>カートに追加する</span>\n    </SBtn>\n  );\n};\n\nconst SBtn = styled.button`\n  height: 64px;\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid ${Color.black};\n  background-color: ${Color.black};\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  span {\n    font-size: 0.9rem;\n    font-weight: 500;\n    line-height: 1;\n    margin-left: 0.5rem;\n  }\n  i,\n  span {\n    color: ${Color.white};\n    transition: all 0.2s;\n  }\n  @media screen and (min-width: 1024px) {\n    &:hover {\n      border-color: ${Color.gray200};\n      background-color: ${Color.white};\n      i,\n      span {\n        color: ${Color.gray400};\n      }\n    }\n  }\n  @media screen and (max-width: 1023px) {\n    &:hover {\n      border-color: ${Color.gray200};\n      background-color: ${Color.white};\n      i,\n      span {\n        color: ${Color.gray400};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const FavoriteBtn = () => {\n  const onClickFavorite = () => {\n    alert(\"お気に入りに追加しました。このサイトはデモサイトです。\");\n  };\n  return (\n    <SBtn onClick={onClickFavorite}>\n      <i className=\"material-icons-outlined\">star_border</i>\n      <span>お気に入りに追加する</span>\n    </SBtn>\n  );\n};\n\nconst SBtn = styled.button`\n  height: 64px;\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid ${Color.gray200};\n  background-color: ${Color.white};\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  span {\n    font-size: 0.9rem;\n    font-weight: 500;\n    line-height: 1;\n    margin-left: 0.5rem;\n  }\n  i,\n  span {\n    color: ${Color.gray400};\n    transition: all 0.2s;\n  }\n  @media screen and (min-width: 1024px) {\n    &:hover {\n      border-color: ${Color.gray200};\n      background-color: ${Color.white};\n      i,\n      span {\n        color: ${Color.gray400};\n      }\n    }\n  }\n  @media screen and (max-width: 1023px) {\n    &:active {\n      border-color: ${Color.gray200};\n      background-color: ${Color.white};\n      i,\n      span {\n        color: ${Color.gray400};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// components\nimport { AddCartBtn } from \"../button/addCartBtn\";\nimport { FavoriteBtn } from \"../button/favoriteBtn\";\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const ItemInfoWrapper = (props) => {\n  return (\n    <SWrapper>\n      {props.selectItems.map(({ id, name, price, genre, brand }) => {\n        return (\n          <div key={id}>\n            <span className=\"genre\">{genre}</span>\n            <span className=\"name\">{name}</span>\n            <span className=\"brand\">{brand}</span>\n            <span className=\"price\">\n              <span>価格：</span>¥ {price}\n            </span>\n          </div>\n        );\n      })}\n      <SBtnArea>\n        <AddCartBtn />\n        <FavoriteBtn />\n      </SBtnArea>\n    </SWrapper>\n  );\n};\n\nconst SWrapper = styled.div`\n  grid-area: info;\n  border-left: 1px dashed ${Color.gray100};\n  padding: 0 2rem;\n  div {\n    display: flex;\n    flex-direction: column;\n    line-height: 1;\n    .genre {\n      font-size: 0.8rem;\n      font-weight: 500;\n      color: ${Color.gray300};\n    }\n    .name {\n      font-size: 2rem;\n      font-weight: 700;\n      color: ${Color.gray400};\n      margin-top: 1rem;\n    }\n    .brand {\n      font-size: 0.8rem;\n      font-weight: 500;\n      color: ${Color.gray300};\n      margin-top: 1rem;\n    }\n    .price {\n      font-size: 1.5rem;\n      font-weight: 500;\n      color: ${Color.gray400};\n      border-top: 1px solid ${Color.gray100};\n      margin-top: 2rem;\n      padding-top: 2rem;\n      span {\n        font-size: 1rem;\n        font-weight: 400;\n        color: ${Color.gray300};\n        margin-right: 1rem;\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    padding: 0 1rem;\n    margin-top: 1rem;\n    padding: 0;\n  }\n`;\n\nconst SBtnArea = styled.div`\n  margin-top: 1rem;\n  button {\n    margin-top: 0.5rem;\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const ItemIntroWrapper = (props) => {\n  return <SWrapper>{props.children}</SWrapper>;\n};\n\nconst SWrapper = styled.div`\n  grid-area: intro;\n  margin-top: 1rem;\n  padding: 2rem;\n  padding-right: 1rem;\n  border-top: 1px dashed ${Color.gray100};\n\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    padding: 2rem 0;\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// components\nimport { ItemImgWrapper } from \"../wrapper/itemImgWrapper\";\nimport { ItemInfoWrapper } from \"../wrapper/itemInfoWrapper\";\nimport { ItemIntroWrapper } from \"../wrapper/itemIntroWrapper\";\n// utils\nimport { Color } from \"../../utils/color\";\nimport { ItemLists } from \"../../utils/itemLists\";\n// img\nimport ImgItem01 from \"../../images/item_01.jpg\";\nimport ImgItem02 from \"../../images/item_02.jpg\";\nimport ImgItem03 from \"../../images/item_03.jpg\";\n// imglist\nconst imgList = [\n  { id: \"01\", img: ImgItem01 },\n  { id: \"02\", img: ImgItem02 },\n  { id: \"03\", img: ImgItem03 },\n];\n// id === 1を抽出\nconst selectItems = ItemLists.filter((Item) => {\n  return Item.id === 1;\n});\n\nexport const ItemSection = () => {\n  return (\n    <SSection>\n      <SContainer>\n        <ItemImgWrapper imgList={imgList} />\n        <ItemInfoWrapper selectItems={selectItems} />\n        <ItemIntroWrapper>\n          商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト\n          <br />\n          <br />\n          商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト\n          <br />\n          <br />\n          商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト商品の説明サンプルテキスト\n        </ItemIntroWrapper>\n      </SContainer>\n    </SSection>\n  );\n};\n\nconst SSection = styled.section`\n  padding: 4rem 0;\n  border-bottom: 1px solid ${Color.gray100};\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    padding: 2rem 0;\n  }\n`;\n\nconst SContainer = styled.div`\n  width: 96%;\n  max-width: 1366px;\n  margin: auto;\n  /*  */\n  display: grid;\n  grid-template-columns: 672px 1fr;\n  grid-template-rows: auto auto;\n  grid-template-areas:\n    \"img info\"\n    \"intro info\";\n  gap: 1rem;\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n    grid-template-areas:\n      \"img\"\n      \"info\"\n      \"intro\";\n    gap: 0.5rem;\n  }\n`;\n","import React from \"react\";\n// components\nimport { DefaultLayout } from \"../../components/layout/defaultLayout\";\nimport { BreadcrumbBar } from \"../../components/bar/breadcrumbBar\";\nimport { SaleSection } from \"../../components/section/saleSection\";\nimport { PickupSection } from \"../../components/section/pickupSection\";\nimport { BrandSection } from \"../../components/section/brandSection\";\nimport { GenreSection } from \"../../components/section/genreSection\";\nimport { ItemSection } from \"../../components/section/itemSection\";\n// breadcrumb\nconst breadcrumbs = [\n  { txt: \"トップ\", url: \"/\" },\n  { txt: \"製品一覧\", url: \"/items\" },\n  { txt: \"製品01\", url: \"/items/item01\" },\n];\n\nconst Item01Page = () => {\n  return (\n    <DefaultLayout pageTitle=\"製品01\">\n      <BreadcrumbBar breadcrumbs={breadcrumbs} />\n      <ItemSection />\n      <SaleSection />\n      <PickupSection />\n      <BrandSection />\n      <GenreSection />\n    </DefaultLayout>\n  );\n};\n\nexport default Item01Page;\n"],"names":["BreadcrumbBar","props","SBar","SContainer","breadcrumbs","map","txt","url","SWrapper","key","to","Color","ItemImgWrapper","useState","isSelect","setIsSelect","onClickChangeImg","e","target","currentTarget","getAttribute","className","imgList","id","img","onClick","src","alt","AddCartBtn","SBtn","alert","FavoriteBtn","ItemInfoWrapper","selectItems","name","price","genre","brand","SBtnArea","ItemIntroWrapper","children","ImgItem01","ImgItem02","ImgItem03","ItemLists","Item","ItemSection","SSection","pageTitle"],"sourceRoot":""}