{"version":3,"file":"component---src-pages-news-post-jsx-ec27f623005fb1f1eaaf.js","mappings":"uLAOO,IAAMA,EAAgB,SAACC,GAC5B,OACE,QAACC,EAAD,MACE,QAACC,EAAD,KACGF,EAAMG,YAAYC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC7B,OACE,QAACC,EAAD,CAAUC,IAAKF,IACb,QAAC,KAAD,CAAMG,GAAIH,GAAMD,IAChB,gCASRJ,GAAI,mEAEYS,EAAAA,EAAAA,QAFZ,wDAUJR,GAAU,sKAWVK,GAAQ,4LAeDG,EAAAA,EAAAA,QAfC,2FAoBGA,EAAAA,EAAAA,KApBH,2DAyBGA,EAAAA,EAAAA,KAzBH,yE,2GCvCDC,EAAU,WACrB,OACE,QAACC,EAAD,MACE,QAAC,KAAD,CAAMH,GAAG,KAAT,eAIAG,GAAI,qJAOcF,EAAAA,EAAAA,QAPd,UAQGA,EAAAA,EAAAA,QARH,mGAaOA,EAAAA,EAAAA,MAbP,qBAckBA,EAAAA,EAAAA,QAdlB,2DAmBOA,EAAAA,EAAAA,MAnBP,qBAoBkBA,EAAAA,EAAAA,QApBlB,8D,uFCbV,EAAe,IAA0B,8D,UCO5BG,EAAc,SAACb,GAC1B,OACE,QAACc,EAAD,MACE,oBAAOd,EAAMe,QACb,oBAAOf,EAAMgB,SAKbF,GAAQ,oJAMYG,EANZ,2GAYDP,EAAAA,EAAAA,MAZC,wO,4IChBd,EAAe,IAA0B,qD,UCYzC,IAAMP,EAAc,CAClB,CAAEE,IAAK,MAAOC,IAAK,KACnB,CAAED,IAAK,OAAQC,IAAK,SACpB,CAAED,IAAK,SAAUC,IAAK,eAiCxB,EA9BiB,WACf,OACE,QAAC,IAAD,CAAeY,UAAU,WACvB,QAAC,IAAD,CAAaH,MAAM,aAAaC,MAAM,YACtC,QAAC,IAAD,CAAeb,YAAaA,KAC5B,QAACgB,EAAD,MACE,QAACjB,EAAD,MACE,QAACkB,EAAD,MACE,QAACN,EAAD,MACE,6BACA,mCACA,8BAEF,QAACO,EAAD,MACE,eAAKC,IAAKC,EAASC,IAAI,WADzB,4KAGE,oBACA,mBAJF,0FAQF,QAACC,EAAD,MACE,QAAC,IAAD,WAUNN,GAAQ,uIASRjB,GAAU,mGAMVkB,GAAQ,0CAERN,GAAQ,8DACgBJ,EAAAA,EAAAA,QADhB,sGAUDA,EAAAA,EAAAA,QAVC,0FAqBRW,GAAO,+IAUPI,GAAQ","sources":["webpack://tofu/./src/components/bar/breadcrumbBar.jsx","webpack://tofu/./src/components/button/backBtn.jsx","webpack://tofu/./src/images/cmp_pageheading.jpg","webpack://tofu/./src/components/heading/pageHeading.jsx","webpack://tofu/./src/images/sample.jpg","webpack://tofu/./src/pages/news/post.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\n// components\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const BreadcrumbBar = (props) => {\n  return (\n    <SBar>\n      <SContainer>\n        {props.breadcrumbs.map(({ txt, url }) => {\n          return (\n            <SWrapper key={url}>\n              <Link to={url}>{txt}</Link>\n              <span>/</span>\n            </SWrapper>\n          );\n        })}\n      </SContainer>\n    </SBar>\n  );\n};\n\nconst SBar = styled.nav`\n  height: 48px;\n  background-color: ${Color.gray100};\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    height: 32px;\n  }\n`;\n\nconst SContainer = styled.div`\n  width: 96%;\n  max-width: 1366px;\n  margin: auto;\n  /*  */\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: left;\n`;\n\nconst SWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  &:first-of-type {\n    a {\n      padding-left: 0;\n    }\n  }\n  span {\n    line-height: 1;\n    font-size: 0.8rem;\n  }\n  a {\n    line-height: 1;\n    font-size: 0.8rem;\n    color: ${Color.gray400};\n    transition: all 0.2s;\n    padding: 0 1rem;\n    @media screen and (min-width: 1024px) {\n      &:hover {\n        color: ${Color.blue};\n      }\n    }\n    @media screen and (max-width: 1023px) {\n      &:active {\n        color: ${Color.blue};\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    a,\n    span {\n      font-size: 0.6rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\n// utils\nimport { Color } from \"../../utils/color\";\n\nexport const BackBtn = () => {\n  return (\n    <SBtn>\n      <Link to=\"/\">トップページに戻る</Link>\n    </SBtn>\n  );\n};\nconst SBtn = styled.span`\n  a {\n    display: inline-flex;\n    align-items: center;\n    font-size: 0.8rem;\n    padding: 1rem 2rem;\n    border-radius: 8px;\n    border: 1px solid ${Color.gray400};\n    color: ${Color.gray400};\n    transition: all 0.2s;\n    justify-content: center;\n    @media screen and (min-width: 1024px) {\n      &:hover {\n        color: ${Color.white};\n        background-color: ${Color.gray400};\n      }\n    }\n    @media screen and (max-width: 1023px) {\n      &:active {\n        color: ${Color.white};\n        background-color: ${Color.gray400};\n      }\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    a {\n      width: 100%;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/cmp_pageheading-37941e46683532b8c37d623ce10c3038.jpg\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// utils\nimport { Color } from \"../../utils/color\";\n// image\nimport ImgBg from \"../../images/cmp_pageheading.jpg\";\n\nexport const PageHeading = (props) => {\n  return (\n    <SHeading>\n      <span>{props.enTxt}</span>\n      <span>{props.jpTxt}</span>\n    </SHeading>\n  );\n};\n\nconst SHeading = styled.div`\n  height: 320px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-image: url(${ImgBg});\n  background-position: bottom;\n  background-size: cover;\n  background-attachment: fixed;\n  span {\n    line-height: 1;\n    color: ${Color.white};\n    &:first-of-type {\n      font-size: 4rem;\n      font-weight: 100;\n      letter-spacing: 0.5rem;\n    }\n    &:last-of-type {\n      margin-top: 0.5rem;\n      font-size: 1rem;\n      font-weight: 400;\n    }\n  }\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    height: 160px;\n    span {\n      &:first-of-type {\n        font-size: 3rem;\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/sample-a770a6651ec964b83bfc3118c804fb60.jpg\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\n// components\nimport { DefaultLayout } from \"../../components/layout/defaultLayout\";\nimport { PageHeading } from \"../../components/heading/pageHeading\";\nimport { BreadcrumbBar } from \"../../components/bar/breadcrumbBar\";\nimport { BackBtn } from \"../../components/button/backBtn\";\n// utils\nimport { Color } from \"../../utils/color\";\n// image\nimport ImgPost from \"../../images/sample.jpg\";\n// breadcrumb\nconst breadcrumbs = [\n  { txt: \"トップ\", url: \"/\" },\n  { txt: \"お知らせ\", url: \"/news\" },\n  { txt: \"記事タイトル\", url: \"/news/post\" },\n];\n\nconst PostPage = () => {\n  return (\n    <DefaultLayout pageTitle=\"お知らせ記事\">\n      <PageHeading enTxt=\"POST TITLE\" jpTxt=\"記事タイトル\" />\n      <BreadcrumbBar breadcrumbs={breadcrumbs} />\n      <SSection>\n        <SContainer>\n          <SArticle>\n            <SHeading>\n              <h2>記事タイトル</h2>\n              <span>2022.01.01</span>\n              <span>#tag</span>\n            </SHeading>\n            <SDetail>\n              <img src={ImgPost} alt=\"sample\" />\n              記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト\n              <br />\n              <br />\n              記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト記事内容サンプルテキスト\n            </SDetail>\n          </SArticle>\n          <SFooting>\n            <BackBtn />\n          </SFooting>\n        </SContainer>\n      </SSection>\n    </DefaultLayout>\n  );\n};\n\nexport default PostPage;\n\nconst SSection = styled.section`\n  padding: 4rem 0;\n  /* ---------- */\n  /* tb */\n  @media screen and (max-width: 1023px) {\n    padding: 2rem 0;\n  }\n`;\n\nconst SContainer = styled.div`\n  width: 96%;\n  max-width: 1366px;\n  margin: auto;\n`;\n\nconst SArticle = styled.article``;\n\nconst SHeading = styled.div`\n  border-bottom: 1px dashed ${Color.gray100};\n  padding-bottom: 2rem;\n  h2 {\n    font-weight: 700;\n    margin-bottom: 1rem;\n    line-height: 1;\n  }\n  span {\n    line-height: 1;\n    color: ${Color.gray200};\n    font-size: 0.9rem;\n    font-weight: 500;\n    &:first-of-type {\n      margin-right: 1rem;\n    }\n    &:last-of-type {\n    }\n  }\n`;\n\nconst SDetail = styled.div`\n  padding-top: 2rem;\n  img {\n    width: 100%;\n    height: 320px;\n    margin-bottom: 1rem;\n    object-fit: cover;\n  }\n`;\n\nconst SFooting = styled.div`\n  margin-top: 2rem;\n  text-align: center;\n`;\n"],"names":["BreadcrumbBar","props","SBar","SContainer","breadcrumbs","map","txt","url","SWrapper","key","to","Color","BackBtn","SBtn","PageHeading","SHeading","enTxt","jpTxt","ImgBg","pageTitle","SSection","SArticle","SDetail","src","ImgPost","alt","SFooting"],"sourceRoot":""}